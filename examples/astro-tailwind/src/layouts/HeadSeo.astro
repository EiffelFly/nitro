---
import { AstroPropContent } from "nitro";
import config from "../../nitro.config.mjs";
import { Frontmatter } from "../types/frontmatter";

const {site} = config

export interface Props {
  content: AstroPropContent & Frontmatter;
  canonicalURL: string;
  title: string;
}

const { content, canonicalURL, title } = Astro.props as Props;
const imageSrc = content?.feature?.src ?? site.openGraph.image.src;
const canonicalImageSrc = new URL(imageSrc, Astro.site);
const imageAlt = content?.feature?.alt ?? site.openGraph.image.alt;
---

<!-- Page Metadata -->
<link rel="canonical" href={canonicalURL} />

<!-- OpenGraph Tags -->
<meta property="og:title" content={title} />
<meta property="og:type" content="article" />
<meta property="og:url" content={canonicalURL} />
<meta property="og:locale" content={content.lang ?? site.defaultLanguage} />
<meta property="og:image" content={canonicalImageSrc} />
<meta property="og:image:alt" content={imageAlt} />
<meta
  name="description"
  property="og:description"
  content={content.description ? content.description : site.description}
/>
<meta property="og:site_name" content={site.title} />

<!-- Twitter Tags -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:site" content={site.openGraph.twitter} />
<meta name="twitter:title" content={title} />
<meta
  name="twitter:description"
  content={content.description ? content.description : site.description}
/>
<meta name="twitter:image" content={canonicalImageSrc} />
<meta name="twitter:image:alt" content={imageAlt} />

<!--
  TODO: Add json+ld data, maybe https://schema.org/APIReference makes sense?
  Docs: https://developers.google.com/search/docs/advanced/structured-data/intro-structured-data
  https://www.npmjs.com/package/schema-dts seems like a great resource for implementing this.
  Even better, there's a React component that integrates with `schema-dts`: https://github.com/google/react-schemaorg
-->
