---
import { SidebarElement, SidebarSection } from "../../../nitro.config";
import cn from "clsx";

export interface Props {
  currentPage: string;
  elements: SidebarElement[];
  topOffset: string;
  hoveredItemBgColor: string;
  currentItemBgColor: string;
  currentItemTextColor: string;
}

const {
  currentPage,
  elements,
  hoveredItemBgColor,
  currentItemBgColor,
  currentItemTextColor,
  topOffset,
} = Astro.props as Props;
const currentPageMatch = currentPage.slice(1);

// SIDEBAR is a flat array. Group it by sections to properly render.

const sidebarSections = elements.reduce<SidebarSection[]>((col, item, i) => {
  // If the first item is not a section header, create a new container section.
  if (i === 0) {
    if (!item.header) {
      const pesudoSection = { text: "" };
      col.push({ ...pesudoSection, children: [], collapsible: true });
    }
  }
  if (item.header) {
    col.push({ ...item, children: [], collapsible: item.collapsible ?? false });
  } else {
    col[col.length - 1].children.push(item);
  }
  return col;
}, []);
---

<nav class={cn("w-full sticky top-0", topOffset)} aria-labelledby="grid-left">
  <ul class="h-full overflow-x-visible overflow-y-auto max-h-screen">
    {sidebarSections.map((section) => (
      <li>
        <div class="">
          <h2 class="text-lg font-bold px-0.5 py-4 uppercase mb-2">
            {section.text}
          </h2>
          <ul>
            {section.children.map((child) => (
              <li
                class={cn(
                  "text-base px-2 py-1 cursor-pointer hover:bg-slate-200",
                  hoveredItemBgColor,
                  currentPageMatch === child.link
                    ? cn(
                        currentItemBgColor,
                        currentItemTextColor,
                        "font-semibold"
                      )
                    : ""
                )}
              >
                <a href={`${Astro.site.pathname}${child.link}`}>{child.text}</a>
              </li>
            ))}
          </ul>
        </div>
      </li>
    ))}
  </ul>
</nav>

<!-- <script is:inline>
  window.addEventListener("DOMContentLoaded", (event) => {
    var target = document.querySelector('[aria-current="page"]');
    if (target && target.offsetTop > window.innerHeight - 100) {
      document.querySelector(".nav-groups").scrollTop = target.offsetTop;
    }
  });
</script> -->
